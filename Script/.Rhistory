length = 0.05)
mtext("f", side = 3, at = -1.1, cex = 1.4)
}
{
pdf(paste0("../Output/FigS8.132.pdf"), width = 9, height =  12)
#png(paste0("../Output/FigS8.132.png"), res = 500, unit = "in", width = 9, height =  12)
par(mfrow=c(3,2))
par(mar = c(5, 5, 4, 0)+0.1)
matrice.temp.rel = matrix(Number.rare.ave.rel["Verrucomicrobia",], nrow = 8, ncol = 3)
matrice.temp2.rel = matrix(Number.rare.sd.rel["Verrucomicrobia",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp.rel),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
main = "Verrucomicrobia",
las = 1,
ylab = expression(Abundance~("%")),
ylim = c(0,100),
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp.rel) - t(matrice.temp2.rel),
barcenter, t(matrice.temp.rel) + t(matrice.temp2.rel),
angle = 90,
code = 3,
length = 0.05)
mtext("a", side = 3, at = -1.1, cex = 1.4)
legend("topleft",
legend = c("Epipelagic", "Mesopelagic", "Bathypelagic"),
ncol=1,
text.col = mypalette[c(1,3,5)],
cex = 1.2)
matrice.temp.rel = matrix(Number.rare.ave.rel["Thaumarchaeota",], nrow = 8, ncol = 3)
matrice.temp2.rel = matrix(Number.rare.sd.rel["Thaumarchaeota",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp.rel),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
main = "Thaumarchaeota",
las = 1,
ylab = "",
ylim = c(0,100),
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp.rel) - t(matrice.temp2.rel),
barcenter, t(matrice.temp.rel) + t(matrice.temp2.rel),
angle = 90,
code = 3,
length = 0.05)
mtext("d", side = 3, at = -1.1, cex = 1.4)
matrice.temp = matrix(Number.rare.ave["Verrucomicrobia",], nrow = 8, ncol = 3)
matrice.temp2 = matrix(Number.rare.sd["Verrucomicrobia",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
ylim = c(0,65),
main = "",
las = 1,
ylab = "Number of ASV",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp) - t(matrice.temp2),
barcenter, t(matrice.temp) + t(matrice.temp2),
angle = 90,
code = 3,
length = 0.05)
mtext("b", side = 3, at = -1.1, cex = 1.4)
matrice.temp = matrix(Number.rare.ave["Thaumarchaeota",], nrow = 8, ncol = 3)
matrice.temp2 = matrix(Number.rare.sd["Thaumarchaeota",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
ylim = c(0,65),
main = "",
las = 1,
ylab = "",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp) - t(matrice.temp2),
barcenter, t(matrice.temp) + t(matrice.temp2),
angle = 90,
code = 3,
length = 0.05)
mtext("e", side = 3, at = -1.1, cex = 1.4)
barcenter<-barplot(t(Verruco.sha.mat.ave ),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "Time (days)",
ylim = c(0,3),
main = "",
las = 1,
ylab = "Shannon index",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(Verruco.sha.mat.ave) - t(Verruco.sha.mat.sd),
barcenter, t(Verruco.sha.mat.ave) + t(Verruco.sha.mat.sd),
angle = 90,
code = 3,
length = 0.05)
mtext("c", side = 3, at = -1.1, cex = 1.4)
barcenter<-barplot(t(Thaumar.sha.mat.ave),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "Time (days)",
ylim = c(0,3),
main = "",
las = 1,
ylab = "Shannon index",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(Thaumar.sha.mat.ave) - t(Thaumar.sha.mat.sd),
barcenter, t(Thaumar.sha.mat.ave) + t(Thaumar.sha.mat.sd),
angle = 90,
code = 3,
length = 0.05)
mtext("f", side = 3, at = -1.1, cex = 1.4)
}
{
#pdf(paste0("../Output/FigS8.132.pdf"), width = 9, height =  12)
png(paste0("../Output/FigS8.132.png"), res = 500, unit = "in", width = 9, height =  12)
par(mfrow=c(3,2))
par(mar = c(5, 5, 4, 0)+0.1)
matrice.temp.rel = matrix(Number.rare.ave.rel["Verrucomicrobia",], nrow = 8, ncol = 3)
matrice.temp2.rel = matrix(Number.rare.sd.rel["Verrucomicrobia",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp.rel),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
main = "Verrucomicrobia",
las = 1,
ylab = expression(Abundance~("%")),
ylim = c(0,100),
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp.rel) - t(matrice.temp2.rel),
barcenter, t(matrice.temp.rel) + t(matrice.temp2.rel),
angle = 90,
code = 3,
length = 0.05)
mtext("a", side = 3, at = -1.1, cex = 1.4)
legend("topleft",
legend = c("Epipelagic", "Mesopelagic", "Bathypelagic"),
ncol=1,
text.col = mypalette[c(1,3,5)],
cex = 1.2)
matrice.temp.rel = matrix(Number.rare.ave.rel["Thaumarchaeota",], nrow = 8, ncol = 3)
matrice.temp2.rel = matrix(Number.rare.sd.rel["Thaumarchaeota",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp.rel),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
main = "Thaumarchaeota",
las = 1,
ylab = "",
ylim = c(0,100),
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp.rel) - t(matrice.temp2.rel),
barcenter, t(matrice.temp.rel) + t(matrice.temp2.rel),
angle = 90,
code = 3,
length = 0.05)
mtext("d", side = 3, at = -1.1, cex = 1.4)
matrice.temp = matrix(Number.rare.ave["Verrucomicrobia",], nrow = 8, ncol = 3)
matrice.temp2 = matrix(Number.rare.sd["Verrucomicrobia",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
ylim = c(0,65),
main = "",
las = 1,
ylab = "Number of ASV",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp) - t(matrice.temp2),
barcenter, t(matrice.temp) + t(matrice.temp2),
angle = 90,
code = 3,
length = 0.05)
mtext("b", side = 3, at = -1.1, cex = 1.4)
matrice.temp = matrix(Number.rare.ave["Thaumarchaeota",], nrow = 8, ncol = 3)
matrice.temp2 = matrix(Number.rare.sd["Thaumarchaeota",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
ylim = c(0,65),
main = "",
las = 1,
ylab = "",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp) - t(matrice.temp2),
barcenter, t(matrice.temp) + t(matrice.temp2),
angle = 90,
code = 3,
length = 0.05)
mtext("e", side = 3, at = -1.1, cex = 1.4)
barcenter<-barplot(t(Verruco.sha.mat.ave ),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "Time (days)",
ylim = c(0,3),
main = "",
las = 1,
ylab = "Shannon index",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(Verruco.sha.mat.ave) - t(Verruco.sha.mat.sd),
barcenter, t(Verruco.sha.mat.ave) + t(Verruco.sha.mat.sd),
angle = 90,
code = 3,
length = 0.05)
mtext("c", side = 3, at = -1.1, cex = 1.4)
barcenter<-barplot(t(Thaumar.sha.mat.ave),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "Time (days)",
ylim = c(0,3),
main = "",
las = 1,
ylab = "Shannon index",
cex.axis = 1.2,
cex.lab = 1.2,
cex.main = 1.2)
arrows(barcenter, t(Thaumar.sha.mat.ave) - t(Thaumar.sha.mat.sd),
barcenter, t(Thaumar.sha.mat.ave) + t(Thaumar.sha.mat.sd),
angle = 90,
code = 3,
length = 0.05)
mtext("f", side = 3, at = -1.1, cex = 1.4)
}
{
#pdf(paste0("../Output/FigS8.132.pdf"), width = 9, height =  12)
png(paste0("../Output/FigS8.132.png"), res = 500, unit = "in", width = 9, height =  12)
par(mfrow=c(3,2))
par(mar = c(5, 5, 4, 0)+0.1)
matrice.temp.rel = matrix(Number.rare.ave.rel["Verrucomicrobia",], nrow = 8, ncol = 3)
matrice.temp2.rel = matrix(Number.rare.sd.rel["Verrucomicrobia",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp.rel),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
main = "Verrucomicrobia",
las = 1,
ylab = expression(Abundance~("%")),
ylim = c(0,100),
cex.axis = 1.5,
cex.lab = 1.5,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp.rel) - t(matrice.temp2.rel),
barcenter, t(matrice.temp.rel) + t(matrice.temp2.rel),
angle = 90,
code = 3,
length = 0.05)
mtext("a", side = 3, at = -1.1, cex = 1.4)
legend("topleft",
legend = c("Epipelagic", "Mesopelagic", "Bathypelagic"),
ncol=1,
text.col = mypalette[c(1,3,5)],
cex = 1.2)
matrice.temp.rel = matrix(Number.rare.ave.rel["Thaumarchaeota",], nrow = 8, ncol = 3)
matrice.temp2.rel = matrix(Number.rare.sd.rel["Thaumarchaeota",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp.rel),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
main = "Thaumarchaeota",
las = 1,
ylab = "",
ylim = c(0,100),
cex.axis = 1.5,
cex.lab = 1.5,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp.rel) - t(matrice.temp2.rel),
barcenter, t(matrice.temp.rel) + t(matrice.temp2.rel),
angle = 90,
code = 3,
length = 0.05)
mtext("d", side = 3, at = -1.1, cex = 1.4)
matrice.temp = matrix(Number.rare.ave["Verrucomicrobia",], nrow = 8, ncol = 3)
matrice.temp2 = matrix(Number.rare.sd["Verrucomicrobia",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
ylim = c(0,65),
main = "",
las = 1,
ylab = "Number of ASV",
cex.axis = 1.5,
cex.lab = 1.5,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp) - t(matrice.temp2),
barcenter, t(matrice.temp) + t(matrice.temp2),
angle = 90,
code = 3,
length = 0.05)
mtext("b", side = 3, at = -1.1, cex = 1.4)
matrice.temp = matrix(Number.rare.ave["Thaumarchaeota",], nrow = 8, ncol = 3)
matrice.temp2 = matrix(Number.rare.sd["Thaumarchaeota",], nrow = 8, ncol = 3)
barcenter<-barplot(t(matrice.temp),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "",
ylim = c(0,65),
main = "",
las = 1,
ylab = "",
cex.axis = 1.5,
cex.lab = 1.5,
cex.main = 1.2)
arrows(barcenter, t(matrice.temp) - t(matrice.temp2),
barcenter, t(matrice.temp) + t(matrice.temp2),
angle = 90,
code = 3,
length = 0.05)
mtext("e", side = 3, at = -1.1, cex = 1.4)
barcenter<-barplot(t(Verruco.sha.mat.ave ),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "Time (days)",
ylim = c(0,3),
main = "",
las = 1,
ylab = "Shannon index",
cex.axis = 1.5,
cex.lab = 1.5,
cex.main = 1.2)
arrows(barcenter, t(Verruco.sha.mat.ave) - t(Verruco.sha.mat.sd),
barcenter, t(Verruco.sha.mat.ave) + t(Verruco.sha.mat.sd),
angle = 90,
code = 3,
length = 0.05)
mtext("c", side = 3, at = -1.1, cex = 1.4)
barcenter<-barplot(t(Thaumar.sha.mat.ave),
beside = TRUE,
col = mypalette[c(1,3,5)],
names.arg = Time.seq,
xlab = "Time (days)",
ylim = c(0,3),
main = "",
las = 1,
ylab = "Shannon index",
cex.axis = 1.5,
cex.lab = 1.5,
cex.main = 1.2)
arrows(barcenter, t(Thaumar.sha.mat.ave) - t(Thaumar.sha.mat.sd),
barcenter, t(Thaumar.sha.mat.ave) + t(Thaumar.sha.mat.sd),
angle = 90,
code = 3,
length = 0.05)
mtext("f", side = 3, at = -1.1, cex = 1.4)
}
#To remove averything in your global environment
rm(list = ls())
#Frequency graph to determine the rare-biosphere
Cor.prok <- read.csv("../Input/Cor.prok132.csv", header=T, row.names=1, sep=",")
prop.table(c(1,2,3))
prop.table(matrix(1,2,3,12,9,20), ncol=2)
prop.table(matrix(c(1,2,3,12,9,20), ncol = 2))
prop.table(matrix(c(1,2,3,12,9,20), ncol = 3))
prop.table(matrix(c(1,2,3,12,9,20), ncol = 2))
prop.table(matrix(c(1,2,3,12,9,20), ncol = 2, byrow = F))
?prop.table()
prop.table(matrix(c(1,2,3,12,9,20), ncol = 2, byrow = F), margin = 2)
prop.table(matrix(c(1,2,3,12,9,20), ncol = 2, byrow = F), margin = 1)
#prop
sha.fct = function(data, even=F, prop=T)
{
if(prop) prop.data = data
else prop.data = prop.table(data, 2)
out.mat = as.matrix(prop.data)
for(i in 1:dim(prop.data)[1])
{
for(j in 1:dim(prop.data)[2])
out.mat[i,j] = prop.data[i,j]*log(prop.data[i,j])*-1
}
out.mat[is.nan(out.mat)] = 0
if(even)
{
for(i in 1:dim(out.mat)[1])
{
temp = length(which(out.mat[i,]>0))
out.mat[i,] = out.mat[i,] / log(temp)
}
}
output = vector(length=dim(prop.data)[1])
for(i in 1:length(output))
{
output[i] = sum(out.mat[i,])
}
return(output)
}
Cor.prok.rel = make_relative(as.matrix(Cor.prok))
Verruco.matrix = Cor.prok.rel[,grep(colnames(Cor.prok.rel),pattern = "Verrucomi")][-c(1:3),]
sha.fct(Verruco.matrix)
Cor.prok.rel = Cor.prok #make_relative(as.matrix(Cor.prok))
Verruco.matrix = Cor.prok.rel[,grep(colnames(Cor.prok.rel),pattern = "Verrucomi")][-c(1:3),]
sha.fct(Verruco.matrix, F, F)
View(Verruco.matrix)
prop.table(Verruco.matrix, 1)
class(Verruco.matrix)
prop.table(as.matrix(Verruco.matrix), 1)
Cor.prok.rel = make_relative(as.matrix(Cor.prok))
Verruco.matrix = Cor.prok.rel[,grep(colnames(Cor.prok.rel),pattern = "Verrucomi")][-c(1:3),]
sha.fct(Verruco.matrix)
Cor.prok.rel = Cor.prok#make_relative(as.matrix(Cor.prok))
Verruco.matrix = Cor.prok.rel[,grep(colnames(Cor.prok.rel),pattern = "Verrucomi")][-c(1:3),]
sha.fct(Verruco.matrix, prop = F)
if(prop) prop.data = data
#prop
sha.fct = function(data, even=F, prop=T)
{
if(prop) prop.data = data
else prop.data = prop.table(as.matrix(data), 2)
out.mat = as.matrix(prop.data)
for(i in 1:dim(prop.data)[1])
{
for(j in 1:dim(prop.data)[2])
out.mat[i,j] = prop.data[i,j]*log(prop.data[i,j])*-1
}
out.mat[is.nan(out.mat)] = 0
if(even)
{
for(i in 1:dim(out.mat)[1])
{
temp = length(which(out.mat[i,]>0))
out.mat[i,] = out.mat[i,] / log(temp)
}
}
output = vector(length=dim(prop.data)[1])
for(i in 1:length(output))
{
output[i] = sum(out.mat[i,])
}
return(output)
}
Cor.prok.rel = make_relative(as.matrix(Cor.prok))
Verruco.matrix = Cor.prok.rel[,grep(colnames(Cor.prok.rel),pattern = "Verrucomi")][-c(1:3),]
sha.fct(Verruco.matrix)
Cor.prok.rel = Cor.prok#make_relative(as.matrix(Cor.prok))
Verruco.matrix = Cor.prok.rel[,grep(colnames(Cor.prok.rel),pattern = "Verrucomi")][-c(1:3),]
sha.fct(Verruco.matrix, prop = F)
else prop.data = prop.table(as.matrix(data), 1)
#prop
sha.fct = function(data, even=F, prop=T)
{
if(prop) prop.data = data
else prop.data = prop.table(as.matrix(data), 1)
out.mat = as.matrix(prop.data)
for(i in 1:dim(prop.data)[1])
{
for(j in 1:dim(prop.data)[2])
out.mat[i,j] = prop.data[i,j]*log(prop.data[i,j])*-1
}
out.mat[is.nan(out.mat)] = 0
if(even)
{
for(i in 1:dim(out.mat)[1])
{
temp = length(which(out.mat[i,]>0))
out.mat[i,] = out.mat[i,] / log(temp)
}
}
output = vector(length=dim(prop.data)[1])
for(i in 1:length(output))
{
output[i] = sum(out.mat[i,])
}
return(output)
}
sha.fct(Verruco.matrix, prop = F)
Cor.prok.rel = make_relative(as.matrix(Cor.prok))
#Diversite
library(funrar)
Cor.prok.rel = make_relative(as.matrix(Cor.prok))
View(Cor.prok.rel)
rowSums(Cor.prok.rel)
rowSums(prop.table(as.matrix(Cor.prok), 1))
View(prop.table(as.matrix(Cor.prok)))
View(prop.table(as.matrix(Cor.prok),1))
